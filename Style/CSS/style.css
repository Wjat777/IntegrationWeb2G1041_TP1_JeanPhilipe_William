@charset "UTF-8";
/*
BEM – meaning block, element, modifier – is a front-end naming methodology thought up by the guys at Yandex. 
It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers.
They are far more strict and informative, which makes the BEM naming convention ideal for teams 
of developers on larger projects that might last a while.
*/
/* Text meant only for screen readers. */
.screen-reader-text {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  word-wrap: normal !important;
}

@font-face {
  font-family: "FF";
  src: url("/assets/fonts/finalf.ttf");
  /*Copyright©  Juan Pablo Reyes Altamirano (https://www.fontspace.com/juan-pablo-reyes-altamirano/)*/
}
/*
BEM – meaning block, element, modifier – is a front-end naming methodology thought up by the guys at Yandex. 
It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers.
They are far more strict and informative, which makes the BEM naming convention ideal for teams 
of developers on larger projects that might last a while.
*/
.nav--blue {
  color: blue;
  align-items: flex-end;
  padding: auto;
}
.nav__finalLogo {
  width: 10rem;
}
.nav__logo {
  display: grid;
  place-content: center;
}

@font-face {
  font-family: "FF";
  src: url("/assets/fonts/finalf.ttf");
  /*Copyright©  Juan Pablo Reyes Altamirano (https://www.fontspace.com/juan-pablo-reyes-altamirano/)*/
}
/*
BEM – meaning block, element, modifier – is a front-end naming methodology thought up by the guys at Yandex. 
It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers.
They are far more strict and informative, which makes the BEM naming convention ideal for teams 
of developers on larger projects that might last a while.
*/
.carousel {
  background-color: #eeeeee;
}

.carousel-center img {
  width: 100%;
  height: auto;
}

@font-face {
  font-family: "FF";
  src: url("/assets/fonts/finalf.ttf");
  /*Copyright©  Juan Pablo Reyes Altamirano (https://www.fontspace.com/juan-pablo-reyes-altamirano/)*/
}
/*
BEM – meaning block, element, modifier – is a front-end naming methodology thought up by the guys at Yandex. 
It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers.
They are far more strict and informative, which makes the BEM naming convention ideal for teams 
of developers on larger projects that might last a while.
*/
.section1 {
  background-color: #eeeeee;
}

@font-face {
  font-family: "FF";
  src: url("/assets/fonts/finalf.ttf");
  /*Copyright©  Juan Pablo Reyes Altamirano (https://www.fontspace.com/juan-pablo-reyes-altamirano/)*/
}
/*
BEM – meaning block, element, modifier – is a front-end naming methodology thought up by the guys at Yandex. 
It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers.
They are far more strict and informative, which makes the BEM naming convention ideal for teams 
of developers on larger projects that might last a while.
*/
/*

layout
╔═══╤═════╤═══╤═══╗
║   │ 1   │   │   ║
╟───┤     ├───┼───╢
║ 2 │     │ 4 │ 5 ║
║   ├───┬─┴───┤   ║
║   │ 3 │ 6   │   ║
╟───┼───┤     ├───╢
║   │   │     │   ║
╚═══╧═══╧═════╧═══╝

*/
.section2__container {
  background-color: #eeeeee;
}

.section2__grid {
  border-radius: 10px;
  background-color: cyan;
  border: 2px gray dashed;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr;
  gap: 5px 5px;
  grid-auto-flow: row;
  grid-template-areas: ". img1 img1 . ." "img2 img1 img1 img4 img5" "img2 img3 img6 img6 img5" ". . img6 img6 .";
}

.section2__item {
  background-color: #80cbc4;
  border: 1px solid lightcyan;
  padding: 20px;
  text-align: center;
}

.section2__img1 {
  grid-area: img1;
}

.section2__img2 {
  grid-area: img2;
}

.section2__img3 {
  grid-area: img3;
}

.section2__img4 {
  grid-area: img4;
}

.section2__img5 {
  grid-area: img5;
}

.section2__img6 {
  grid-area: img6;
}

.gallery__img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

@font-face {
  font-family: "FF";
  src: url("/assets/fonts/finalf.ttf");
  /*Copyright©  Juan Pablo Reyes Altamirano (https://www.fontspace.com/juan-pablo-reyes-altamirano/)*/
}
/*
BEM – meaning block, element, modifier – is a front-end naming methodology thought up by the guys at Yandex. 
It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers.
They are far more strict and informative, which makes the BEM naming convention ideal for teams 
of developers on larger projects that might last a while.
*/
.recherche {
  /* CSS declarations for `.block` */
  background-color: #eeeeee;
}
.recherche__citation {
  background-color: #99bbee;
  font-family: "FF";
  justify-content: space-evenly;
  align-content: space-around;
  margin: 3rem;
}
.recherche__citation--italic {
  /* CSS declarations for `.block--modifier__element` */
  font-style: italic;
}
.recherche--blue {
  color: darkblue;
}

.recherche1 {
  margin: 0 auto;
  width: 40%;
  text-align: center;
}

.btn-rechercher {
  width: 8rem;
  margin: 1rem;
}

cite {
  font-size: 1.5rem;
}

@font-face {
  font-family: "FF";
  src: url("/assets/fonts/finalf.ttf");
  /*Copyright©  Juan Pablo Reyes Altamirano (https://www.fontspace.com/juan-pablo-reyes-altamirano/)*/
}
/*
BEM – meaning block, element, modifier – is a front-end naming methodology thought up by the guys at Yandex. 
It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers.
They are far more strict and informative, which makes the BEM naming convention ideal for teams 
of developers on larger projects that might last a while.
*/
.statistique {
  font-family: "FF";
  background-color: #eeeeee;
}
.statistique__pie {
  width: 50%;
}
.statistique__pourcentage {
  width: 49%;
}
.statistique__explication {
  max-width: 30rem;
}
.statistique__pourcentage {
  width: 49%;
}
.statistique__contentUploaded {
  font-style: italic;
}
.statistique__sold {
  font-style: italic;
}
.statistique--text {
  /* CSS declarations for `.block--modifier__element` */
  font-family: "FF";
  font-size: x-large;
}

/**/
.pie-chart {
  background: radial-gradient(circle closest-side, transparent 70%, white 0),
    conic-gradient(from 134deg, #338e5f 0, #338e5f 63.8%, #f28e2c 0, #f28e2c 75.2%, #e15759 0, #e15759 85.7%, #76b7b2 0, #76b7b2 100%);
  position: relative;
  width: 500px;
  min-height: 350px;
  margin: 0;
  outline: 1px solid #ccc;
}

.pie-chart h2 {
  position: absolute;
  margin: 1rem;
}

.pie-chart cite {
  position: absolute;
  bottom: 0;
  font-size: 80%;
  padding: 1rem;
  color: gray;
}

.pie-chart figcaption {
  position: absolute;
  bottom: 1em;
  right: 1em;
  font-size: smaller;
  text-align: right;
}

.pie-chart span:after {
  display: inline-block;
  content: "";
  width: 0.8em;
  height: 0.8em;
  margin-left: 0.4em;
  height: 0.8em;
  border-radius: 0.2em;
  background: currentColor;
}

@font-face {
  font-family: "FF";
  src: url("/assets/fonts/finalf.ttf");
  /*Copyright©  Juan Pablo Reyes Altamirano (https://www.fontspace.com/juan-pablo-reyes-altamirano/)*/
}
/*
BEM – meaning block, element, modifier – is a front-end naming methodology thought up by the guys at Yandex. 
It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers.
They are far more strict and informative, which makes the BEM naming convention ideal for teams 
of developers on larger projects that might last a while.
*/
.contact {
  background-color: #eeeeee;
}
.contact i {
  padding: 0.2rem;
}

.contact__container {
  position: relative;
}

.contact_carte__container {
  position: relative;
}

.contact_form__container {
  position: absolute;
  top: 10%;
  left: 52%;
  z-index: 99;
  background-color: rgb(202, 197, 197);
  border: black 1px solid;
  padding: 12px;
  border-radius: 12px;
  max-width: calc(30rem - 5px);
}

.contactUs {
  display: flex;
}

@font-face {
  font-family: "FF";
  src: url("/assets/fonts/finalf.ttf");
  /*Copyright©  Juan Pablo Reyes Altamirano (https://www.fontspace.com/juan-pablo-reyes-altamirano/)*/
}
/*
BEM – meaning block, element, modifier – is a front-end naming methodology thought up by the guys at Yandex. 
It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers.
They are far more strict and informative, which makes the BEM naming convention ideal for teams 
of developers on larger projects that might last a while.
*/
.footer {
  background-color: #eeeeee;
  align-items: center;
}
.footer__endMenu ul {
  display: flex;
  justify-content: center;
  margin: 2rem;
  padding: 1rem;
  justify-content: center;
  align-items: center;
  list-style-type: none !important;
}
.footer__endMenu li {
  padding: 1rem;
}
.footer__finalLogo {
  width: 10rem;
}
.footer__logo {
  display: grid;
  place-content: center;
}

@font-face {
  font-family: "FF";
  src: url("/assets/fonts/finalf.ttf");
  /*Copyright©  Juan Pablo Reyes Altamirano (https://www.fontspace.com/juan-pablo-reyes-altamirano/)*/
}
/*
BEM – meaning block, element, modifier – is a front-end naming methodology thought up by the guys at Yandex. 
It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers.
They are far more strict and informative, which makes the BEM naming convention ideal for teams 
of developers on larger projects that might last a while.
*/
.formulaire {
  background-color: #eeeeee;
}

@font-face {
  font-family: "FF";
  src: url("/assets/fonts/finalf.ttf");
  /*Copyright©  Juan Pablo Reyes Altamirano (https://www.fontspace.com/juan-pablo-reyes-altamirano/)*/
}
/*
BEM – meaning block, element, modifier – is a front-end naming methodology thought up by the guys at Yandex. 
It is a smart way of naming your CSS classes to give them more transparency and meaning to other developers.
They are far more strict and informative, which makes the BEM naming convention ideal for teams 
of developers on larger projects that might last a while.
*/
.members {
  background-color: #eeeeee;
}

.card {
  position: relative;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: column;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;
  background-color: #fff;
  background-clip: border-box;
  border: 1px solid rgba(0, 0, 0, 0.125);
  border-radius: 0.25rem;
}

.member__body--min-height {
  min-height: 32rem;
}

.member__profile {
  top: -50px;
  left: 0;
}
.member__profile img {
  width: 100px;
  height: 100px;
}

@font-face {
  font-family: "FF";
  src: url("/assets/fonts/finalf.ttf");
  /*Copyright©  Juan Pablo Reyes Altamirano (https://www.fontspace.com/juan-pablo-reyes-altamirano/)*/
}
body {
  background-color: #fdfdfd;
}

.separateur {
  border: 5px solid #5fa1a2;
  border-radius: 5px;
} /*# sourceMappingURL=style.css.map */
